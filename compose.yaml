services:
  postgres:
    image: timescale/timescaledb-ha:pg17
    container_name: evedata-postgres
    environment:
      POSTGRES_DB: evedata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  ducklake:
    image: postgres:17
    container_name: evedata-ducklake
    environment:
      POSTGRES_DB: ducklake
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - ducklake-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: evedata-minio
    ports:
      - "9000:9000" # MinIO API
      - "9002:9002" # MinIO Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_BROWSER_REDIRECT_URL=https://localhost:9002
      - MINIO_PROMETHEUS_AUTH_TYPE=public
    volumes:
      - ./var/lib/minio:/data
    command: server /data --console-address ":9002"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: evedata-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  ducklake-data:
  postgres-data:
  minio-data:
  redis-data:

networks:
  default:
    name: evedata-network

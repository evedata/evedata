---
# tasks file for hetzner_rescue_recon

- name: Set recon timestamp fact
  ansible.builtin.set_fact:
    recon_run_timestamp: "{{ ansible_date_time.epoch }}"
    recon_report_dir: "{{ recon_base_dir }}/{{ ansible_date_time.epoch }}"
  run_once: true
  delegate_to: localhost
  delegate_facts: true

- name: Ensure local report directory exists
  ansible.builtin.file:
    path: "{{ hostvars['localhost']['recon_report_dir'] }}/{{ inventory_hostname }}"
    state: directory
    mode: "0755"
  delegate_to: localhost

- name: Gather basic system facts
  ansible.builtin.setup:
    gather_subset:
      - all
      - hardware
      - network
      - virtual

- name: Install required tools if not present
  ansible.builtin.package:
    name:
      - lshw
      - smartmontools
      - dmidecode
      - pciutils
      - usbutils
      - mdadm
      - parted
    state: present
  ignore_errors: true
  when: ansible_os_family == "Debian"

- name: Execute reconnaissance commands
  ansible.builtin.shell: "{{ item.value }}"
  register: recon_results
  loop: "{{ recon_commands | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  changed_when: false
  failed_when: false

- name: Gather hardware information with lshw
  ansible.builtin.command: lshw -json -quiet
  register: lshw_output
  changed_when: false
  failed_when: false

- name: Check for RAID arrays
  ansible.builtin.command: cat /proc/mdstat
  register: mdstat_output
  changed_when: false
  failed_when: false

- name: Get detailed network information
  ansible.builtin.shell: |
    echo "=== Network Interfaces ==="
    ip -d link show
    echo ""
    echo "=== IP Addresses ==="
    ip -d addr show
    echo ""
    echo "=== Routing Table ==="
    ip route show table all
    echo ""
    echo "=== Network Statistics ==="
    ss -s
    echo ""
    echo "=== DNS Configuration ==="
    cat /etc/resolv.conf
  register: network_detailed
  changed_when: false

- name: Get disk performance characteristics
  ansible.builtin.shell: |
    for disk in $(lsblk -d -n -o NAME | grep -E '^(sd|nvme)'); do
      echo "=== /dev/$disk ==="
      hdparm -I /dev/$disk 2>/dev/null || echo "hdparm not available for $disk"
      echo ""
      cat /sys/block/$disk/queue/rotational
      cat /sys/block/$disk/queue/scheduler
      cat /sys/block/$disk/device/model 2>/dev/null || echo "Model info not available"
      echo ""
    done
  register: disk_performance
  changed_when: false
  failed_when: false

- name: Create comprehensive system report
  ansible.builtin.template:
    src: rescue_recon_report.j2
    dest: "{{ hostvars['localhost']['recon_report_dir'] }}/{{ inventory_hostname }}/system_report.md"
  delegate_to: localhost
  vars:
    recon_data: "{{ recon_results.results }}"
    system_facts: "{{ ansible_facts }}"
    lshw_data: "{{ lshw_output.stdout | default('') }}"
    mdstat_data: "{{ mdstat_output.stdout | default('') }}"
    network_data: "{{ network_detailed.stdout | default('') }}"
    disk_perf_data: "{{ disk_performance.stdout | default('') }}"

- name: Save raw JSON data for programmatic analysis
  ansible.builtin.copy:
    content: |
      {
        "hostname": "{{ inventory_hostname }}",
        "timestamp": "{{ ansible_date_time.iso8601 }}",
        "ansible_facts": {{ ansible_facts | to_nice_json }},
        "reconnaissance_data": {
          {% for item in recon_results.results %}
          "{{ item.item.key }}": {{ item.stdout | default('') | to_json }},
          {% endfor %}
          "lshw": {{ lshw_output.stdout | default('{}') }},
          "mdstat": {{ mdstat_output.stdout | default('') | to_json }},
          "network_detailed": {{ network_detailed.stdout | default('') | to_json }},
          "disk_performance": {{ disk_performance.stdout | default('') | to_json }}
        }
      }
    dest: "{{ hostvars['localhost']['recon_report_dir'] }}/{{ inventory_hostname }}/raw_data.json"
  delegate_to: localhost

- name: Create disk layout visualization
  ansible.builtin.shell: |
    echo "# Disk Layout for {{ inventory_hostname }}"
    echo "Generated: {{ ansible_date_time.iso8601 }}"
    echo ""
    echo "## Physical Disks"
    lsblk -o NAME,SIZE,TYPE,FSTYPE,MOUNTPOINT,MODEL,SERIAL,ROTA
    echo ""
    echo "## Partition Tables"
    for disk in $(lsblk -d -n -o NAME | grep -E '^(sd|nvme)'); do
      echo "### /dev/$disk"
      parted /dev/$disk print 2>/dev/null || echo "No partition table"
      echo ""
    done
    echo ""
    echo "## RAID Configuration"
    if [ -f /proc/mdstat ]; then
      cat /proc/mdstat
      mdadm --detail /dev/md* 2>/dev/null || echo "No RAID arrays active"
    else
      echo "No RAID support in kernel"
    fi
  register: disk_layout
  changed_when: false

- name: Save disk layout visualization
  ansible.builtin.copy:
    content: "{{ disk_layout.stdout }}"
    dest: "{{ hostvars['localhost']['recon_report_dir'] }}/{{ inventory_hostname }}/disk_layout.md"
  delegate_to: localhost

- name: Generate summary report
  ansible.builtin.copy:
    content: |
      # Hetzner Rescue System Reconnaissance Summary
      ## Host: {{ inventory_hostname }}
      **Date**: {{ ansible_date_time.iso8601 }}
      **IP Address**: {{ ansible_host | default(ansible_default_ipv4.address) }}

      ## System Overview
      - **OS**: {{ ansible_distribution }} {{ ansible_distribution_version }}
      - **Kernel**: {{ ansible_kernel }}
      - **Architecture**: {{ ansible_architecture }}
      - **Virtualization**: {{ ansible_virtualization_type | default('bare-metal') }}

      ## Hardware Summary
      - **CPU Model**: {{ ansible_processor[2] | default('Unknown') }}
      - **CPU Cores**: {{ ansible_processor_cores }} cores, {{ ansible_processor_count }} CPUs
      - **Total Memory**: {{ ansible_memtotal_mb }} MB
      - **Product Name**: {{ ansible_product_name | default('Unknown') }}
      - **BIOS Version**: {{ ansible_bios_version | default('Unknown') }}

      ## Storage Summary
      - **Total Disk Space**: {{ ansible_mounts | map(attribute='size_total') | sum | filesizeformat }}
      - **Number of Block Devices**: {{ ansible_devices | length }}
      - **Devices**: {{ ansible_devices.keys() | list | join(', ') }}

      ## Network Summary
      - **Primary Interface**: {{ ansible_default_ipv4.interface | default('Unknown') }}
      - **Primary IP**: {{ ansible_default_ipv4.address | default('Unknown') }}
      - **Gateway**: {{ ansible_default_ipv4.gateway | default('Unknown') }}
      - **DNS Servers**: {{ ansible_dns.nameservers | default([]) | join(', ') }}

      ## Report Files Generated
      1. `system_report.md` - Detailed system report
      2. `raw_data.json` - Complete JSON data for analysis
      3. `disk_layout.md` - Disk and partition visualization

      ---
      *Generated by Ansible Reconnaissance Playbook*
    dest: "{{ hostvars['localhost']['recon_report_dir'] }}/{{ inventory_hostname }}/summary.md"
  delegate_to: localhost

- name: Create index file for all reconnaissance reports
  ansible.builtin.template:
    src: recon_index.j2
    dest: "{{ hostvars['localhost']['recon_report_dir'] }}/index.md"
  delegate_to: localhost
  run_once: true

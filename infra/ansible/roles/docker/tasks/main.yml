---
- name: Validate Docker installation prerequisites
  ansible.builtin.assert:
    that:
      - ansible_distribution == "Ubuntu"
      - ansible_distribution_version is version('24.04', '>=')
    fail_msg: "This role requires Ubuntu 24.04 LTS or later"
    success_msg: "Operating system requirements validated"
  tags:
    - docker
    - docker-validate

- name: Install Docker on Ubuntu 24.04 LTS
  block:
    - name: Update apt cache and install prerequisites
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
        state: present
        update_cache: true
        cache_valid_time: 3600
      tags:
        - docker
        - docker-prerequisites

    - name: Create directory for Docker GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        owner: root
        group: root
        mode: "0755"
      tags:
        - docker
        - docker-repo

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: "{{ docker_gpg_key_url }}"
        dest: /etc/apt/keyrings/docker.asc
        owner: root
        group: root
        mode: "0644"
        force: false
      tags:
        - docker
        - docker-repo

    - name: Add Docker repository to apt sources
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.asc]
          {{ docker_repository_url }} {{ ansible_distribution_release }} stable
        state: present
        filename: docker
        update_cache: true
      tags:
        - docker
        - docker-repo

    - name: Install Docker packages
      ansible.builtin.apt:
        name: "{{ docker_packages }}"
        state: present
        update_cache: true
        cache_valid_time: 3600
      notify:
        - Restart docker
        - Restart containerd
      tags:
        - docker
        - docker-install

    - name: Ensure Docker service is enabled and started
      ansible.builtin.systemd:
        name: docker
        enabled: true
        state: started
        daemon_reload: true
      tags:
        - docker
        - docker-service

    - name: Ensure containerd service is enabled and started
      ansible.builtin.systemd:
        name: containerd
        enabled: true
        state: started
        daemon_reload: true
      tags:
        - docker
        - docker-service

    - name: Create docker group
      ansible.builtin.group:
        name: docker
        state: present
        system: false
      tags:
        - docker
        - docker-group

    - name: Add ansible user to docker group
      ansible.builtin.user:
        name: "{{ docker_users_to_add | default('ansible') }}"
        groups: docker
        append: true
      when: docker_add_users_to_group | default(true)
      tags:
        - docker
        - docker-group

  rescue:
    - name: Docker installation failed
      ansible.builtin.fail:
        msg: |
          Docker installation failed.
          Error: {{ ansible_failed_result.msg | default('Unknown error') }}
          Please review the error and retry.

- name: Validate Docker installation
  block:
    - name: Check Docker version
      ansible.builtin.command: docker --version
      register: docker_version_check
      changed_when: false
      tags:
        - docker
        - docker-validate

    - name: Check Docker Compose plugin version
      ansible.builtin.command: docker compose version
      register: docker_compose_check
      changed_when: false
      tags:
        - docker
        - docker-validate

    - name: Verify Docker service is running
      ansible.builtin.systemd:
        name: docker
        state: started
      check_mode: true
      register: docker_service_check
      changed_when: false
      tags:
        - docker
        - docker-validate

    - name: Verify containerd service is running
      ansible.builtin.systemd:
        name: containerd
        state: started
      check_mode: true
      register: docker_containerd_service_check
      changed_when: false
      tags:
        - docker
        - docker-validate

    - name: Test Docker functionality
      ansible.builtin.command: docker run --rm hello-world
      register: docker_test_run
      changed_when: false
      when: docker_test_installation | default(false)
      tags:
        - docker
        - docker-validate
        - docker-test

    - name: Display Docker installation details
      ansible.builtin.debug:
        msg:
          - "Docker version: {{ docker_version_check.stdout }}"
          - "Docker Compose version: {{ docker_compose_check.stdout }}"
          - "Docker service status: {{ 'running' if not docker_service_check.changed else 'not running' }}"
          - >-
            Containerd service status:
            {{ 'running' if not docker_containerd_service_check.changed else 'not running' }}
      tags:
        - docker
        - docker-validate

    - name: Validate all Docker components
      ansible.builtin.assert:
        that:
          - docker_version_check.rc == 0
          - docker_compose_check.rc == 0
          - not docker_service_check.changed
          - not docker_containerd_service_check.changed
        fail_msg: "Docker installation validation failed"
        success_msg: "Docker installation validated successfully"
      tags:
        - docker
        - docker-validate

  rescue:
    - name: Docker validation warning
      ansible.builtin.debug:
        msg: |
          WARNING: Docker installation appeared to complete but validation failed.
          Please manually verify:
          - Docker and Docker Compose are properly installed
          - Docker and containerd services are running
          - The ansible user has been added to the docker group

---
# MicroK8s Launch Configuration
# Generated by Ansible for {{ ansible_hostname }}
# Version: {{ microk8s_config_version }}

version: {{ microk8s_config_version }}

{% if microk8s_persistent_cluster_token %}
persistentClusterToken: {{ microk8s_persistent_cluster_token }}
{% endif %}

# Addon configuration - enable required addons with proper ordering
addons:
{% for addon in microk8s_addons %}
{% if addon.enabled %}
  - name: {{ addon.name }}
{% if addon.args and addon.args | length > 0 %}
    args:
{% for arg in addon.args %}
      - "{{ arg }}"
{% endfor %}
{% endif %}
{% endif %}
{% endfor %}

{% if microk8s_extra_sans | length > 0 %}
# Additional Subject Alternative Names for API server certificates
extraSANs:
{% for san in microk8s_extra_sans %}
  - "{{ san }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_kube_apiserver_args | length > 0 %}
# Extra kube-apiserver arguments
extraKubeAPIServerArgs:
{% for key, value in microk8s_extra_kube_apiserver_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_kubelet_args | length > 0 %}
# Extra kubelet arguments
extraKubeletArgs:
{% for key, value in microk8s_extra_kubelet_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_kube_proxy_args | length > 0 %}
# Extra kube-proxy arguments
extraKubeProxyArgs:
{% for key, value in microk8s_extra_kube_proxy_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_kube_controller_manager_args | length > 0 %}
# Extra kube-controller-manager arguments
extraKubeControllerManagerArgs:
{% for key, value in microk8s_extra_kube_controller_manager_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_kube_scheduler_args | length > 0 %}
# Extra kube-scheduler arguments
extraKubeSchedulerArgs:
{% for key, value in microk8s_extra_kube_scheduler_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_containerd_args | length > 0 %}
# Extra containerd arguments
extraContainerdArgs:
{% for key, value in microk8s_extra_containerd_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_dqlite_args | length > 0 %}
# Extra k8s-dqlite arguments
extraDqliteArgs:
{% for key, value in microk8s_extra_dqlite_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_etcd_args | length > 0 %}
# Extra etcd arguments
extraEtcdArgs:
{% for key, value in microk8s_extra_etcd_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_flanneld_args | length > 0 %}
# Extra flanneld arguments
extraFlanneldArgs:
{% for key, value in microk8s_extra_flanneld_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_cluster_agent_args | length > 0 %}
# Extra cluster-agent arguments
extraClusterAgentArgs:
{% for key, value in microk8s_extra_cluster_agent_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_apiserver_proxy_args | length > 0 %}
# Extra apiserver-proxy arguments
extraAPIServerProxyArgs:
{% for key, value in microk8s_extra_apiserver_proxy_args.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_kubelite_env | length > 0 %}
# Environment variables for Kubernetes services (kubelite)
extraKubeliteEnv:
{% for key, value in microk8s_extra_kubelite_env.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_containerd_env | length > 0 %}
# Environment variables for containerd
extraContainerdEnv:
{% for key, value in microk8s_extra_containerd_env.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_flanneld_env | length > 0 %}
# Environment variables for flanneld
extraFlanneldEnv:
{% for key, value in microk8s_extra_flanneld_env.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_dqlite_env | length > 0 %}
# Environment variables for k8s-dqlite
extraDqliteEnv:
{% for key, value in microk8s_extra_dqlite_env.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_etcd_env | length > 0 %}
# Environment variables for etcd
extraEtcdEnv:
{% for key, value in microk8s_extra_etcd_env.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_cluster_agent_env | length > 0 %}
# Environment variables for cluster-agent
extraClusterAgentEnv:
{% for key, value in microk8s_extra_cluster_agent_env.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_apiserver_proxy_env | length > 0 %}
# Environment variables for apiserver-proxy
extraAPIServerProxyEnv:
{% for key, value in microk8s_extra_apiserver_proxy_env.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_cni_env | length > 0 %}
# CNI configuration environment variables
extraCNIEnv:
{% for key, value in microk8s_extra_cni_env.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_extra_fips_env | length > 0 %}
# FIPS mode environment variables
extraFIPSEnv:
{% for key, value in microk8s_extra_fips_env.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if microk8s_registry_mirrors | length > 0 %}
# Container registry mirror configurations
containerdRegistryConfigs:
{% for registry, config in microk8s_registry_mirrors.items() %}
  {{ registry }}: |
{{ config | indent(4, true) }}
{% endfor %}
{% endif %}

{% if microk8s_extra_config_files | length > 0 %}
# Additional configuration files in $SNAP_DATA/args/
extraConfigFiles:
{% for filename, content in microk8s_extra_config_files.items() %}
  {{ filename }}: |
{{ content | indent(4, true) }}
{% endfor %}
{% endif %}

{% if microk8s_enable_community_repo or microk8s_addon_repositories | length > 0 %}
# Addon repositories configuration
addonRepositories:
{% if microk8s_enable_community_repo %}
  # Community addon repository
  - name: community
    url: https://github.com/canonical/microk8s-community-addons
{% endif %}
{% for repo in microk8s_addon_repositories %}
  # Custom addon repository: {{ repo.name }}
  - name: {{ repo.name }}
    url: {{ repo.url }}
{% if repo.reference is defined %}
    reference: {{ repo.reference }}
{% endif %}
{% endfor %}
{% endif %}

{% if microk8s_dns_nameservers | length > 0 %}
# CoreDNS custom upstream nameservers
dns:
  upstreamNameservers:
{% for nameserver in microk8s_dns_nameservers %}
    - "{{ nameserver }}"
{% endfor %}
{% endif %}
